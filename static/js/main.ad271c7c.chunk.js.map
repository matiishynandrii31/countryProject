{"version":3,"sources":["constants/constants.js","actions/country.js","api/rest.js","components/HomePage/HomePage.js","components/SearchForm/SearchForm.js","containers/SearchingContainer.js","components/Country/Country.js","containers/CountryContainer.js","components/CountryItem/CountryItem.js","components/Navbar/Navbar.js","containers/ItemContainer.js","components/App/App.js","reducers/CountryReducer.js","reducers/index.js","index.js"],"names":["GET_POSTS_BY_REQUEST","GET_POSTS_BY_SUCCESS","GET_POSTS_BY_FAIL","SEARCH_QUERY_REQUEST","SEARCH_QUERY_SUCCESS","SEARCH_QUERY_FAIL","SEARCH_QUERY_TEXT","getSearchingCountry","data","fetch","getSearchingCountryName","dispatch","a","type","response","json","res","payload","getSearchingCountryNameFunc","getCountry","getCountryFunc","HomePage","href","SearchForm","props","handleChange","bind","searchCountry","e","preventDefault","this","country","searchUrl","newLink","toUpperCase","slice","toLowerCase","alert","searchQueryText","target","value","searchQuery","className","onSubmit","onChange","placeholder","React","Component","connect","state","searchQueryFunc","Counrty","showCountryList","map","item","to","pathname","name","params","src","flag","alt","getCountryInfo","Country","CountryItem","CountryInfo","populationInfo","capitalInfo","newUrl","match","thousands","millions","MILLION","number","population","milStr","thouStr","toFixed","finalStr","Array","isArray","capital","regionalBlocs","length","languages","uuidv4","Navbar","App","exact","path","component","ItemContainer","initialState","isLoading","error","searchData","countryReducer","action","combineReducers","CountryReducer","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad271c7c.chunk.js","sourcesContent":["export const GET_POSTS_BY_REQUEST = 'GET_POSTS_BY_REQUEST';\r\nexport const GET_POSTS_BY_SUCCESS = 'GET_POSTS_BY_SUCCESS';\r\nexport const GET_POSTS_BY_FAIL = 'GET_POSTS_BY_FAIL';\r\nexport const SEARCH_QUERY_REQUEST = 'SEARCH_QUERY_REQUEST';\r\nexport const SEARCH_QUERY_SUCCESS = 'SEARCH_QUERY_SUCCESS';\r\nexport const SEARCH_QUERY_FAIL = 'SEARCH_QUERY_FAIL';\r\nexport const SEARCH_QUERY_TEXT = 'SEARCH_QUERY_TEXT';\r\n","import {\r\n    GET_POSTS_BY_REQUEST,\r\n    GET_POSTS_BY_SUCCESS,\r\n    GET_POSTS_BY_FAIL,\r\n    SEARCH_QUERY_TEXT,\r\n    SEARCH_QUERY_REQUEST,\r\n    SEARCH_QUERY_SUCCESS,\r\n    SEARCH_QUERY_FAIL\r\n} from '../constants/constants';\r\nimport {getCountryInfo} from \"../api/rest\";\r\n\r\n// const getCountry = (dispatch) => {\r\n//     dispatch({type: GET_POSTS_BY_REQUEST});\r\n//     fetch('https://restcountries.eu/rest/v2/all')\r\n//         .then(res => res.json())\r\n//         .then(res => {\r\n//             if (res.error) {\r\n//                 dispatch({type: GET_POSTS_BY_FAIL, payload: res.error});\r\n//             }\r\n//             dispatch({type: GET_POSTS_BY_SUCCESS, payload: res});\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch({type: GET_POSTS_BY_FAIL, payload: error});\r\n//         })\r\n// };\r\n\r\nexport function searchQueryFunc(data) {\r\n    return{ type: SEARCH_QUERY_TEXT, payload: data}\r\n}\r\nlet getSearchingCountry = (data) => fetch(data)\r\n\r\nconst getSearchingCountryName = async (dispatch, data) => {\r\n    dispatch({ type:  SEARCH_QUERY_REQUEST });\r\n    try {\r\n        const response = await getSearchingCountry(data);\r\n        const res = await response.json();\r\n        dispatch({ type: SEARCH_QUERY_SUCCESS, payload: res });\r\n    } catch (e) {\r\n        dispatch({ type: SEARCH_QUERY_FAIL, payload: e });\r\n    }\r\n};\r\n\r\nexport const getSearchingCountryNameFunc = (dispatch, data) => {\r\n    return (data) => getSearchingCountryName(data, dispatch);\r\n}\r\n\r\nconst getCountry = async (dispatch) => {\r\n    dispatch({ type: GET_POSTS_BY_REQUEST });\r\n\r\n    try {\r\n        const response = await getCountryInfo();\r\n        const res = await response.json();\r\n        dispatch({ type: GET_POSTS_BY_SUCCESS, payload: res });\r\n    } catch (e) {\r\n        dispatch({ type: GET_POSTS_BY_FAIL, payload: e });\r\n    }\r\n};\r\n\r\nexport const getCountryFunc = dispatch => {\r\n    return () => getCountry(dispatch);\r\n}","export const getCountryInfo = () => fetch('https://restcountries.eu/rest/v2/all');","import React from \"react\";\r\nimport \"./homePage.css\";\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n        <p>\r\n            This page is based on <a href=\"https://restcountries.eu/\">REST Counries</a>\r\n        </p>\r\n        </div>\r\n    );\r\n};\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport './searchForm.css';\r\n\r\n\r\nclass SearchForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.searchCountry = this.searchCountry.bind(this);\r\n    }\r\n\r\n\r\n    searchCountry(e) {\r\n        e.preventDefault();\r\n        const link = 'https://restcountries.eu/rest/v2/name/';\r\n\r\n        if (this.props.country.searchUrl !== '') {\r\n            let newLink = this.props.country.searchUrl;\r\n\r\n            newLink = newLink[0].toUpperCase() + newLink.slice(1).toLowerCase();\r\n            newLink = link + newLink;\r\n            this.props.getSearchingCountryName(newLink)\r\n        } else {\r\n            let a = 'https://restcountries.eu/rest/v2/all';\r\n\r\n            this.props.getSearchingCountryName(a)\r\n            alert(\"You don't entering country name!!! Please, do it!\")\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        let searchQueryText = e.target.value\r\n        this.props.searchQuery(searchQueryText)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form\">\r\n                <h2>Search for a country</h2>\r\n                <form className=\"country-search-form\" onSubmit={this.searchCountry}>\r\n                    <input className=\"form-input\" onChange={this.handleChange} value={this.props.country.searchUrl}\r\n                           type=\"text\" placeholder='Enter name of country'/>\r\n                    <button className='form-btn'>SEARCH</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { searchQueryFunc, getSearchingCountryNameFunc } from '../actions/country'\r\nimport SearchForm from \"../components/SearchForm/SearchForm\";\r\n\r\n\r\n\r\nconst SearchingContainer = ({ country, searchQuery, getSearchingCountryName }) => (\r\n    <SearchForm\r\n        country={country}\r\n        searchQuery={searchQuery}\r\n        getSearchingCountryName={getSearchingCountryName}\r\n    />\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    country: state.country\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        searchQuery: (data) => dispatch(searchQueryFunc(data)),\r\n        getSearchingCountryName: (data) => dispatch(getSearchingCountryNameFunc(data))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchingContainer)","import React from 'react';\r\nimport \"./country.css\"\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport SearchingContainer from \"../../containers/SearchingContainer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Counrty extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.showCountryList = this.showCountryList.bind(this);\r\n    };\r\n\r\n\r\n    showCountryList() {\r\n        if (this.props.country.country.data || this.props.searchUrl === '') {\r\n            return (\r\n                this.props.country.country.data.map(item => {\r\n                    return (\r\n                        <ul className=\"list\">\r\n                            <li key={item.name} className=\"list-item\" >\r\n                                <Link to={{pathname: `/list/${item.name}`}} params={{item: item}}\r\n                                      className='linkToCountry'>\r\n                                    <div>\r\n                                        <h3>{item.name}</h3>\r\n                                        <a href=\"\"><img src={item.flag} alt=\"\"/></a>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <p>No result</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCountryInfo()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchingContainer/>\r\n                <div>\r\n                    {this.showCountryList()}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counrty;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCountryFunc } from '../actions/country'\r\nimport Country from '../components/Country/Country'\r\n\r\n\r\n\r\nconst CountryContainer = ({ country, getCountryInfo }) => (\r\n    <Country\r\n        country={country}\r\n        getCountryInfo={getCountryInfo}\r\n    />\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    country: state.country\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCountryInfo: getCountryFunc(dispatch)\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CountryContainer)","import React from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport './countryItem.css'\r\n\r\nclass CountryItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.CountryInfo = this.CountryInfo.bind(this);\r\n        this.populationInfo = this.populationInfo.bind(this);\r\n        this.capitalInfo = this.capitalInfo.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const link = 'https://restcountries.eu/rest/v2/name/';\r\n        let newUrl = this.props.match.params.item;\r\n\r\n        newUrl = newUrl[0].toUpperCase() + newUrl.slice(1).toLowerCase();\r\n        newUrl = link + newUrl;\r\n        this.props.getSearchingCountryName(newUrl)\r\n    }\r\n\r\n    populationInfo(item) {\r\n        const MILLION = 1000000;\r\n        const THOUSAND = 1000;\r\n        let number = item.population;\r\n        let thousands, millions;\r\n        let milStr = '', thouStr = '';\r\n\r\n        millions = number / MILLION;\r\n        millions = +millions.toFixed();\r\n        if (millions > 0) {\r\n            milStr = ` ${millions},`\r\n        }\r\n\r\n        number = number % MILLION;\r\n        thousands = number / THOUSAND;\r\n        thousands = +thousands.toFixed();\r\n        if (thousands > 0) {\r\n            thouStr = `${thousands},`;\r\n        }\r\n\r\n        number = number % THOUSAND;\r\n\r\n        let finalStr = milStr + thouStr + number\r\n        return (<span>{finalStr}</span>)\r\n    }\r\n\r\n    capitalInfo(item) {\r\n        if (Array.isArray(item.capital)) {\r\n            return 'More than 1 capital'\r\n        } else {\r\n            if (item.capital) {\r\n                return item.capital\r\n            } else {\r\n                return 'Country havent capitel'\r\n            }\r\n        }\r\n    }\r\n\r\n    CountryInfo() {\r\n        if (this.props.country.country.data) {\r\n            return (\r\n                this.props.country.country.data.map(item => {\r\n                    return (\r\n                        <li key={uuidv4()} className='country-list-ul'>\r\n                            <div className='country-info-block'>\r\n                                <h2><b>Information about {item.name}</b></h2>\r\n                                <h4>Name: {item.name}</h4>\r\n                                <h4>Capital: {this.capitalInfo(item)}</h4>\r\n                                <h4>Population: {this.populationInfo(item)}</h4>\r\n                                {item.regionalBlocs.length > 0 &&\r\n                                <p>RegionalBlocs: {item.regionalBlocs[0].name}</p>}\r\n                                <p>Languages: {item.languages[0].name}</p>\r\n                            </div>\r\n                            <div className='country-info-block-img'>\r\n                                <img src={item.flag} alt=\"\"/>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='country-item'>\r\n                <Link to={\"/list\"} className='back-btn'>Back</Link>\r\n                <ul className='countries-list-main-ul'>\r\n                    {this.CountryInfo()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryItem;","import React from 'react'\r\nimport './navbar.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"navbar\">\r\n                <NavLink to=\"/\">HOME</NavLink>\r\n                <NavLink to=\"/list\">COUNTRY LIST</NavLink>\r\n                {/*<NavLink to=\"/regionalBlocs\">REGIONAL BLOC</NavLink>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getSearchingCountryNameFunc } from '../actions/country';\r\nimport CounrtyItem from \"../components/CountryItem/CountryItem\";\r\n\r\n\r\nconst ItemContainer = ({ country,getSearchingCountryName, match}) => (\r\n    <CounrtyItem\r\n        country={country}\r\n        getSearchingCountryName={getSearchingCountryName}\r\n        match={match}\r\n    />\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    country: state.country\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getSearchingCountryName: (data) => dispatch(getSearchingCountryNameFunc(data))\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ItemContainer)","import React from 'react';\r\nimport './App.css';\r\nimport CountryContainer from '../../containers/CountryContainer'\r\nimport CountryItem from \"../CountryItem/CountryItem\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport ItemContainer from \"../../containers/ItemContainer\";\r\nimport SearchingContainer from \"../../containers/SearchingContainer\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <BrowserRouter>\r\n                <Navbar/>\r\n                <Route exact path=\"/list\">\r\n                    <CountryContainer/>\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                    <HomePage />\r\n                </Route>\r\n                <Route path=\"/list/:item\" component={ItemContainer}/>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n    GET_POSTS_BY_REQUEST,\r\n    GET_POSTS_BY_SUCCESS,\r\n    GET_POSTS_BY_FAIL,\r\n    SEARCH_QUERY_REQUEST,\r\n    SEARCH_QUERY_SUCCESS,\r\n    SEARCH_QUERY_FAIL,\r\n    SEARCH_QUERY_TEXT\r\n} from '../constants/constants'\r\n\r\nconst initialState = {\r\n    country: {\r\n        isLoading: null,\r\n        error: null,\r\n        data: null,\r\n        searchData: null\r\n    },\r\n    searchUrl: ''\r\n};\r\n\r\nconst countryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POSTS_BY_REQUEST:\r\n            return {\r\n                ...state,\r\n                country: {\r\n                    isLoading: true,\r\n                    error: null,\r\n                    data: null,\r\n                    searchData: null\r\n                }\r\n            }\r\n        case GET_POSTS_BY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                country: {\r\n                    isLoading: false,\r\n                    error: false,\r\n                    data: action.payload,\r\n                    searchData: false\r\n                },\r\n            }\r\n        case GET_POSTS_BY_FAIL:\r\n            return {\r\n                ...state,\r\n                country: {\r\n                    isLoading: false,\r\n                    error: action.payload,\r\n                    data: false,\r\n                    searchData: false\r\n                }\r\n            }\r\n        case SEARCH_QUERY_REQUEST:\r\n            return {\r\n                ...state,\r\n                country: {\r\n                    isLoading: true,\r\n                    error: null,\r\n                    data: null,\r\n                    searchData: null\r\n                }\r\n            }\r\n        case SEARCH_QUERY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                country: {\r\n                    isLoading: false,\r\n                    error: false,\r\n                    data: action.payload,\r\n                    searchData: false\r\n                }\r\n            }\r\n        case SEARCH_QUERY_FAIL:\r\n            return {\r\n                ...state,\r\n                country: {\r\n                    isLoading: false,\r\n                    error: action.payload,\r\n                    data: false,\r\n                    searchData: false\r\n                }\r\n            }\r\n        case SEARCH_QUERY_TEXT:\r\n            return{\r\n                ...state,\r\n                searchUrl: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default countryReducer;","import { combineReducers } from 'redux';\r\nimport CountryReducer from './CountryReducer'\r\n\r\nexport default combineReducers({\r\n    country: CountryReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport {applyMiddleware, createStore, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(createLogger());\r\n}\r\n\r\n//REDUX-DEV-TOOLS\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n    applyMiddleware(...middleware)\r\n));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App/>\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}